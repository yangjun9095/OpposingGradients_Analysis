function compile_InitialSlopes_AllConstructs
%% Description 
% Compiling and avearging initial slopes from multiple embryos
% Generate plots, and also save the fields that are calculated.

%This code is using the "mean fits" files generated by my version of FitMeanAPAsymetric 
%to plot the initial rates along APaxis. 
%The T_on (time of activation of the transcription,extrapolated from the initial rate)
%can also be plotted.

%% Make a structure that compiles all information
DataTypesForFit = {'r0-new','r1-new','r2-new','r3-new','r1-close','r1-mid','r2_1+2','r2_1+3',...
                    'r0_RuntNull','r1_RuntNull','r2_RuntNull','r3_RuntNull',...
                    'r1_close_RuntNull','r1_mid_RuntNull','r2_close_RuntNull','r2_far_RuntNull'};

% Name of constructs so that we can label plots and files
constructNames = {'000','100','011','111','001','010','110','101',...
                    '000, null','100, null','011, null','111, null','001, null','010, null','110, null','101, null'};
                
% SAve the DataType and LoadMS2Sets into a structure, named compiledData
% The first row will contain the field names
compiledData{1,1} = 'DataType';
compiledData{1,2} = 'compiledData';

% Loop through all DataTypes to load comipled data from each dataType
for DataType = [1,9]%1:length(DataTypesForFit)
    compiledData{DataType+1,1} = DataTypesForFit{DataType};
    compiledData{DataType+1,2} = LoadMS2Sets(DataTypesForFit{DataType},'dontCompare');
end


%% Extract the fitted values from all DataTypes
% First, initialize the structure with the field names
compiledData{1,3} = 'fitted Rate';
compiledData{1,4} = 'fitted Rate_SD';
compiledData{1,5} = 'fitted T_ON';
compiledData{1,6} = 'T_peak';
compiledData{1,7} = 'Tau';
% compiledData{1,8} = 'Tau_SD';
compiledData{1,8} = 'Tau_numer';

% Go over the structure (compiledData) to extract the fitted initial slope,
% SD, number of embryos, T_on, T_peak, Tau, etc.

for i=1:length(DataTypesForFit)
    [fittedRate,fittedRateSD,fittedTon,T_peak, Tau, Tau_SD, Tau_numer] = Extract_Fields_MeanFits(compiledData{i+1,2},'Asymmetric');
    
    compiledData{i+1,3} = fittedRate;
    compiledData{i+1,4} = fittedRateSD;
    compiledData{i+1,5} = fittedTon;
    compiledData{i+1,6} = T_peak;
    compiledData{i+1,7} = Tau;
%     compiledData{i+1,8} = Tau_SD;
    compiledData{i+1,8} = Tau_numer; % numerically calculated from the maximum at 40min into nc14
end


%% Calculate the average using nanmean, nanstd

% Loop through all datasets to calculate the mean and SEM of the fitted
% rate, T_ON, Tau, and duration (in NC14)

% NOTE : the [000] and [000], Runt null are taken for less than 30 min,
% thus we need to use the 

% initialize the structure column
% fitted initial slope and SEM
compiledData{1,9} = 'fittedRate_mean';
compiledData{1,10} = 'fittedRate_SEM';
% fitted T_ON and SEM
compiledData{1,11} = 'fitted_T_ON_mean';
compiledData{1,12} = 'fitted_T_ON_SEM';
% Duration of Txn (T_peak - T_ON + Tau)
% average and SEM over multiple embryos of the same genotype
compiledData{1,13} = 'Duration_mean';
compiledData{1,14} = 'Duration_SEM';
% duration of individual embryos
compiledData{1,15} = 'Duration_individual';

NC = 3; %nc14

for i=1:length(DataTypesForFit)
    % clear the variables for each run
    vars = {'fittedRate_mean','fittedRate_SEM',...
                'fittedTon','fitted_T_ON_SEM','T_peak','Duration_individual',...
                'Duration_mean','Duration_SEM'};
    clear (vars{:})
    
    % initial slope
    fittedRate_mean = nanmean(compiledData{i+1,3}(:,NC,:),3); % only nc14
    fittedRate_SEM = nanstd(compiledData{i+1,3}(:,NC,:),0,3)./sqrt(length(compiledData{i+1,2})); 
    compiledData{i+1,9} = fittedRate_mean;
    compiledData{i+1,10} = fittedRate_SEM;
    
    % T_ON
    fitted_T_ON_mean = nanmean(compiledData{i+1,5}(:,NC,:),3); % only nc14
    fitted_T_ON_SEM = nanstd(compiledData{i+1,5}(:,NC,:),0,3)./sqrt(length(compiledData{i+1,2})); 
    compiledData{i+1,11} = fitted_T_ON_mean;
    compiledData{i+1,12} = fitted_T_ON_SEM;
    
    % Txn Duration 
    T_peak = compiledData{i+1,6};
    T_ON = squeeze(compiledData{i+1,5}(:,NC,:));
    Tau = compiledData{i+1,8}; % numerically calculated from the max @ 30min
    %Tau = compiledData{i+1,7}; % fitted : [000] and [000], Runt null (1st
    %and 9th datatype)
    
    % filter out the Tau value that is too long
    Tau(Tau>15) = nan; % threshold of 60 min, this should be revisited later.
    Tau(Tau<2) = nan; % threshold of 60 min, this should be revisited later.
    
    % Duration = (T_peak - T_ON + Tau)
    Duration_individual = T_peak - T_ON + Tau; % APbins x embryos
    Duration_mean = nanmean(Duration_individual,2);
    Duration_SEM = nanstd(Duration_individual,0,2)./sqrt(length(compiledData{i+1,2}));
    compiledData{i+1,13} = Duration_mean;
    compiledData{i+1,14} = Duration_SEM;
    compiledData{i+1,15} = Duration_individual;
end

%% check the duration of Txn over AP axis
% hold on
% % for i=1:5
% %     plot(0:0.025:1, Tau(:,i))
% % end
% errorbar(0:0.025:1, Duration_mean, Duration_SEM)
% xlabel('embryo length')
% ylabel('duration (min)')
% ylim([0 60])
% 
% % save the plot

%% Save the structure, compiledData for future usage (in plotting scripts)
save('S:\YangJoon\Dropbox\OpposingGradient\OpposingGradients_ProcessedData\compiledData.mat',...
        'compiledData')

    
%% OLD - Plot the averaged fittedRate (initial rate of RNAP loading), and SEM

% FigPath = 'E:\YangJoon\LivemRNA\Data\Dropbox\Garcia Lab\Figures\Opposing Gradients\Data\InitialSlope_Asymmetric\';

% % NC12
% InitialRate_NC12_figure = figure;
% nc = 1; % NC12
% hold on
% errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc))
% errorbar(0:0.025:1,average_fittedRate_r1(:,nc),SEM_fittedRate_r1(:,nc))
% errorbar(0:0.025:1,average_fittedRate_r2(:,nc),SEM_fittedRate_r2(:,nc))
% errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc))
%errorbar(0:0.025:1,average_fittedRate_r3_prime(:,nc),SEM_fittedRate_r3_prime(:,nc))

% legend('r0','r1','r2','r3')
% xlabel('AP Position')
% ylabel('Initial rate (AU/min)')
% title('Initial rate of RNAP loading along AP axis, at NC 14')
% StandardFigure(InitialRate_NC12_figure, InitialRate_NC12_figure.CurrentAxes)
% 
% saveas(InitialRate_NC12_figure,[FigPath 'InitialRate_AsymmetricFit_r0123' , '_NC12' , '.pdf']); 

% % NC13
% InitialRate_NC13_figure = figure;
% nc = 2; % NC13
% hold on
% errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc),'Color',ColorChoice(1,:))
% % Females
% errorbar(0:0.025:1,average_fittedRate_r1(:,nc),SEM_fittedRate_r1(:,nc),'Color',ColorChoice(2,:))
% errorbar(0:0.025:1,average_fittedRate_r2(:,nc),SEM_fittedRate_r2(:,nc),'Color',ColorChoice(3,:))
% errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc),'Color',ColorChoice(4,:))
% % % Males
% % errorbar(0:0.025:1,average_fittedRate_r1_male(:,nc),SEM_fittedRate_r1_male(:,nc))
% % errorbar(0:0.025:1,average_fittedRate_r2_male(:,nc),SEM_fittedRate_r2_male(:,nc))
% % errorbar(0:0.025:1,average_fittedRate_r3_male(:,nc),SEM_fittedRate_r3_male(:,nc))
% 
% xlim([0.15 0.5])
% ylim([0 400])
% 
% legend('r0','r1-female','r2-female','r3-female')%,'r1-male','r2-male','r3-male') 
% xlabel('AP Position')
% ylabel('Initial rate (AU/min)')
% title('Initial rate of RNAP loading along AP axis, at NC 13')
% StandardFigure(InitialRate_NC13_figure, InitialRate_NC13_figure.CurrentAxes)
% %standardizeFigure_YJK(gca,legend)
% % saveas(InitialRate_NC13_figure,[FigPath 'InitialRate_AsymmetricFit_r0123' , '_NC13' , '.tif']); 
% % saveas(InitialRate_NC13_figure,[FigPath 'InitialRate_AsymmetricFit_r0123' , '_NC13' , '.pdf']); 

% NC14
InitialRate_NC14_figure = figure;
nc = 3; % NC13
hold on
errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc),'Color',ColorChoice(1,:)) % magenta
errorbar(0:0.025:1,average_fittedRate_r1(:,nc),SEM_fittedRate_r1(:,nc),'Color',ColorChoice(2,:)) % green
errorbar(0:0.025:1,average_fittedRate_r2(:,nc),SEM_fittedRate_r2(:,nc),'Color',ColorChoice(3,:)) % yellow
errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc),'Color',ColorChoice(4,:)) % red

xlim([0.15 0.6])
ylim([0 250])

legend('r0','r1','r2','r3')%,'r1-male','r2-male','r3-male') 
xlabel('AP Position')
ylabel('Initial rate (AU/min)')
title('Initial rate of RNAP loading along AP axis, at NC 14')
StandardFigure(InitialRate_NC14_figure, InitialRate_NC14_figure.CurrentAxes)

saveas(InitialRate_NC14_figure,[FigPath 'InitialRate_AsymmetricFit_r0123_' , '_NC14_fixedFittingScript' , '.tif']); 
saveas(InitialRate_NC14_figure,[FigPath 'InitialRate_AsymmetricFit_r0123_' , '_NC14_fixedFittingScript' , '.pdf']); 

%% r0 fitted rate over AO profile
% NC14
InitialRate_NC14_figure = figure;
nc = 3; % NC13
hold on
errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc),'Color',ColorChoice(2,:),'LineWidth',2) % magenta
% errorbar(0:0.025:1,average_fittedRate_r1(:,nc),SEM_fittedRate_r1(:,nc),'Color',ColorChoice(2,:)) % green
% errorbar(0:0.025:1,average_fittedRate_r2(:,nc),SEM_fittedRate_r2(:,nc),'Color',ColorChoice(3,:)) % yellow
% errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc),'Color',ColorChoice(4,:)) % red

xlim([0.15 0.6])
ylim([0 250])

legend('fitted initial RNAP loading rate','Location','Northeast')%,'r1-male','r2-male','r3-male') 
xlabel('AP Position')
ylabel('Initial rate (AU/min)')
%title('Initial rate of RNAP loading along AP axis, at NC 14')
StandardFigure(InitialRate_NC14_figure, InitialRate_NC14_figure.CurrentAxes)

saveas(InitialRate_NC14_figure,[figPath, filesep, 'initial_rate_example_000' , '.tif']); 
saveas(InitialRate_NC14_figure,[figPath, filesep, 'initial_rate_example_000' , '.pdf']); 
%% Generate plots for different constructs (r1, r2 variants)
%% 1) r1 variants
APaxis = 0:0.025:1;
nc = 3; % NC14

hold on
errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc),'Color',ColorChoice(1,:))

errorbar(0:0.025:1,average_fittedRate_r1(:,nc),SEM_fittedRate_r1(:,nc),'Color',ColorChoice(2,:))
errorbar(0:0.025:1,average_fittedRate_r1_close(:,nc),SEM_fittedRate_r1_close(:,nc),'Color',ColorChoice(5,:))
errorbar(0:0.025:1,average_fittedRate_r1_mid(:,nc),SEM_fittedRate_r1_mid(:,nc),'Color',ColorChoice(6,:))

errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc),'Color',ColorChoice(4,:)) % red

xlim([0.15 0.6])
ylim([0 250])

legend('r0','r1','r1-close','r1-mid', 'r3')%,'r1-male','r2-male','r3-male') 
xlabel('AP Position')
ylabel('Initial rate (AU/min)')
title('Initial rate of RNAP loading along AP axis, at NC 14')
StandardFigure(gcf, gca)

saveas(gcf,[FigPath 'InitialRate_AsymmetricFit_r1_variants' , '_NC14_fixedFittingScript' , '.tif']); 
saveas(gcf,[FigPath 'InitialRate_AsymmetricFit_r1_variants' , '_NC14_fixedFittingScript' , '.pdf']); 
%% 2) r2 variants
hold on
APaxis = 0:0.025:1;
errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc),'Color',ColorChoice(1,:))

errorbar(0:0.025:1,average_fittedRate_r2(:,nc),SEM_fittedRate_r2(:,nc),'Color',ColorChoice(3,:))
errorbar(0:0.025:1,average_fittedRate_r2_close(:,nc),SEM_fittedRate_r2_close(:,nc),'Color',ColorChoice(7,:))
errorbar(0:0.025:1,average_fittedRate_r2_far(:,nc),SEM_fittedRate_r2_far(:,nc),'Color',ColorChoice(8,:))

errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc),'Color',ColorChoice(4,:)) % red

xlim([0.15 0.6])
ylim([0 250])

legend('r0','r2','r2(1+2)','r2(1+3)','r3')%,'r1-male','r2-male','r3-male') 
xlabel('AP Position')
ylabel('Initial rate (AU/min)')
title('Initial rate of RNAP loading along AP axis, at NC 14')
StandardFigure(gcf, gca)

saveas(gcf,[FigPath 'InitialRate_AsymmetricFit_r2_variants' , '_NC14_fixedFittingScript' , '.tif']); 
saveas(gcf,[FigPath 'InitialRate_AsymmetricFit_r2_variants' , '_NC14_fixedFittingScript' , '.pdf']); 

%% generate plots of r1-close, in comparison of r0, with Nulls
hold on
APaxis = 0:0.025:1;
nc=3; % nc14
errorbar(0:0.025:1,average_fittedRate_r0(:,nc),SEM_fittedRate_r0(:,nc),'LineWidth',2,'Color',ColorChoice(1,:))

errorbar(0:0.025:1,average_fittedRate_r0_null(:,nc),SEM_fittedRate_r0_null(:,nc),'LineWidth',2,'Color',ColorChoice(3,:))
errorbar(0:0.025:1,average_fittedRate_r1_close(:,nc),SEM_fittedRate_r1_close(:,nc),'LineWidth',2,'Color',ColorChoice(5,:))
errorbar(0:0.025:1,average_fittedRate_r1_close_null(:,nc),SEM_fittedRate_r1_close_null(:,nc),'LineWidth',2,'Color',ColorChoice(8,:))

% errorbar(0:0.025:1,average_fittedRate_r3(:,nc),SEM_fittedRate_r3(:,nc),'Color',ColorChoice(4,:)) % red

xlim([0.15 0.6])
ylim([0 400])

legend('[000]','[000], null','[001]','[001],null')
xlabel('AP Position (embryo length)')
ylabel('initial RNAP rate (AU/min)')
% title('Initial rate of RNAP loading along AP axis, at NC 14')
StandardFigure(gcf, gca)

figPath = 'S:\YangJoon\Dropbox\Garcia Lab\Figures\OpposingGradientsFigures\Data\Fig3_AsymmetricFits'
saveas(gcf,[figPath, filesep, 'Initial_rate_r0_r1close_nulls' , '.tif']); 
saveas(gcf,[figPath, filesep, 'Initial_rate_r0_r1close_nulls' , '.pdf']); 

%% calculate the fold-change
FC_000 = average_fittedRate_r0./average_fittedRate_r0_null;
FC_000_SEM = SEM_fittedRate_r0./average_fittedRate_r0_null;

FC_001 = average_fittedRate_r1_close./average_fittedRate_r1_close_null;
FC_001_SEM = SEM_fittedRate_r1_close./average_fittedRate_r1_close_null;

hold on
figure(2)

errorbar(APaxis,FC_000(:,3),FC_000_SEM(:,3),...
            'LineWidth',2,'Color',ColorChoice(1,:))

errorbar(APaxis,FC_001(:,3),FC_001_SEM(:,3),...
            'LineWidth',2,'Color',ColorChoice(5,:))
        
xlim([0.15 0.5])
ylim([0 1.2])

xticks([0.15 0.2 0.3 0.4 0.5 0.6])

legend('[000]','[001]')
xlabel('AP Position (embryo length)')
ylabel('fold-change')
% title('Initial rate of RNAP loading along AP axis, at NC 14')
StandardFigure(gcf, gca)

figPath = 'S:\YangJoon\Dropbox\Garcia Lab\Figures\OpposingGradientsFigures\Data\Fig3_AsymmetricFits'
saveas(gcf,[figPath, filesep, 'fold_change_r0_r1close_nulls' , '.tif']); 
saveas(gcf,[figPath, filesep, 'fold_change_r0_r1close_nulls' , '.pdf']);       
%% Save the fitted initial rate and SEM 

% Define the values

save('E:\YangJoon\LivemRNA\Data\Dropbox\OpposingGradient\OpposingGradients_ProcessedData\AveragedInitialRate_AsymmetricFit_FixedFittingScript.mat',...
        'average_fittedRate_r0','SEM_fittedRate_r0',...
        'average_fittedRate_r1','SEM_fittedRate_r1',...
        'average_fittedRate_r2','SEM_fittedRate_r2',...
        'average_fittedRate_r3','SEM_fittedRate_r3',...
        'average_fittedRate_r1_close','SEM_fittedRate_r1_close',...
        'average_fittedRate_r1_mid','SEM_fittedRate_r1_mid',...
        'average_fittedRate_r2_close','SEM_fittedRate_r2_close',...
        'average_fittedRate_r2_far','SEM_fittedRate_r2_far')

%% Construct a cell to save all the variables
initialSlopes_ONnuclei_variables = ...
    {'fittedRate_r0','fittedRateSD_r0','fittedTon_r0','average_fittedRate_r0','SEM_fittedRate_r0',...
    'fittedRate_r1','fittedRateSD_r1','fittedTon_r1','average_fittedRate_r1','SEM_fittedRate_r1',...
    'fittedRate_r2','fittedRateSD_r2','fittedTon_r2','average_fittedRate_r2','SEM_fittedRate_r2',...
    'fittedRate_r3','fittedRateSD_r3','fittedTon_r3','average_fittedRate_r3','SEM_fittedRate_r3',...
    'fittedRate_r1_close','fittedRateSD_r1_close','fittedTon_r1_close','average_fittedRate_r1_close','SEM_fittedRate_r1_close',...
    'fittedRate_r1_mid','fittedRateSD_r1_mid','fittedTon_r1_mid','average_fittedRate_r1_mid','SEM_fittedRate_r1_mid',...
    'fittedRate_r2_close','fittedRateSD_r2_close','fittedTon_r2_close','average_fittedRate_r2_close','SEM_fittedRate_r2_close',...
    'fittedRate_r2_far','fittedRateSD_r2_far','fittedTon_r2_far','average_fittedRate_r2_far','SEM_fittedRate_r2_far'}

%% Construct a cell structure that has all the variables for easier compiling.
% Dimensions : fittedRate, fittedRateSD, fittedTon : APbins x NCs(12,13,
% and 14) x # embryos

initialSlopes_ONnuclei = cell(8,6);
% The first row has information (strings) of what each column has.
initialSlopes_ONnuclei{1,1} = 'ConstructName';
initialSlopes_ONnuclei{1,2} = 'fittedRate';
initialSlopes_ONnuclei{1,3} = 'fittedRateSD';
initialSlopes_ONnuclei{1,4} = 'fittedTon';
initialSlopes_ONnuclei{1,5} = 'average_fittedRate';
initialSlopes_ONnuclei{1,6} = 'SEM_fittedRate';

% the second row is r0
initialSlopes_ONnuclei{2,1} = 'r0';
initialSlopes_ONnuclei{2,2} = fittedRate_r0;
initialSlopes_ONnuclei{2,3} = fittedRateSD_r0;
initialSlopes_ONnuclei{2,4} = fittedTon_r0;
initialSlopes_ONnuclei{2,5} = average_fittedRate_r0;
initialSlopes_ONnuclei{2,6} = SEM_fittedRate_r0;

% the third row is r1
initialSlopes_ONnuclei{3,1} = 'r1';
initialSlopes_ONnuclei{3,2} = fittedRate_r1;
initialSlopes_ONnuclei{3,3} = fittedRateSD_r1;
initialSlopes_ONnuclei{3,4} = fittedTon_r1;
initialSlopes_ONnuclei{3,5} = average_fittedRate_r1;
initialSlopes_ONnuclei{3,6} = SEM_fittedRate_r1;

% r2
initialSlopes_ONnuclei{4,1} = 'r2';
initialSlopes_ONnuclei{4,2} = fittedRate_r2;
initialSlopes_ONnuclei{4,3} = fittedRateSD_r2;
initialSlopes_ONnuclei{4,4} = fittedTon_r2;
initialSlopes_ONnuclei{4,5} = average_fittedRate_r2;
initialSlopes_ONnuclei{4,6} = SEM_fittedRate_r2;

% r3
initialSlopes_ONnuclei{5,1} = 'r3';
initialSlopes_ONnuclei{5,2} = fittedRate_r3;
initialSlopes_ONnuclei{5,3} = fittedRateSD_r3;
initialSlopes_ONnuclei{5,4} = fittedTon_r3;
initialSlopes_ONnuclei{5,5} = average_fittedRate_r3;
initialSlopes_ONnuclei{5,6} = SEM_fittedRate_r3;

% r1_close
initialSlopes_ONnuclei{6,1} = 'r1-close';
initialSlopes_ONnuclei{6,2} = fittedRate_r1_close;
initialSlopes_ONnuclei{6,3} = fittedRateSD_r1_close;
initialSlopes_ONnuclei{6,4} = fittedTon_r1_close;
initialSlopes_ONnuclei{6,5} = average_fittedRate_r1_close;
initialSlopes_ONnuclei{6,6} = SEM_fittedRate_r1_close;

% r1_mid
initialSlopes_ONnuclei{7,1} = 'r1-mid';
initialSlopes_ONnuclei{7,2} = fittedRate_r1_mid;
initialSlopes_ONnuclei{7,3} = fittedRateSD_r1_mid;
initialSlopes_ONnuclei{7,4} = fittedTon_r1_mid;
initialSlopes_ONnuclei{7,5} = average_fittedRate_r1_mid;
initialSlopes_ONnuclei{7,6} = SEM_fittedRate_r1_mid;

% r2_close
initialSlopes_ONnuclei{8,1} = 'r2-close';
initialSlopes_ONnuclei{8,2} = fittedRate_r2_close;
initialSlopes_ONnuclei{8,3} = fittedRateSD_r2_close;
initialSlopes_ONnuclei{8,4} = fittedTon_r2_close;
initialSlopes_ONnuclei{8,5} = average_fittedRate_r2_close;
initialSlopes_ONnuclei{8,6} = SEM_fittedRate_r2_close;

% r2_far
initialSlopes_ONnuclei{9,1} = 'r2-far';
initialSlopes_ONnuclei{9,2} = fittedRate_r2_far;
initialSlopes_ONnuclei{9,3} = fittedRateSD_r2_far;
initialSlopes_ONnuclei{9,4} = fittedTon_r2_far;
initialSlopes_ONnuclei{9,5} = average_fittedRate_r2_far;
initialSlopes_ONnuclei{9,6} = SEM_fittedRate_r2_far;

%% Save this variable
DropboxFolder = 'S:\YangJoon\Dropbox\OpposingGradient'
save([DropboxFolder,filesep,'OpposingGradients_ProcessedData',filesep,'InitialSlopes_ONnuclei_AllConstructs.mat'],...
    'initialSlopes_ONnuclei','-v7.3');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Part 2. Generating plots from saved data.
% First, load the datasets from above.
%% Load the fitted initial slope (Data)
% Data calculated from the script :
% main02_plot_Initial_Loading_Rates_Asymmetric.m
% 
InitialSlope = load([FilePath, filesep, 'AveragedInitialRate_AsymmetricFit.mat']);

%% Extract useful fields 
% Extract the initial slope from the saved structure.
nc = 14;% NC14
NC= nc - 11;
InitialRate_r0_NC14 = InitialSlope.average_fittedRate_r0(:,NC);
InitialRate_r1_NC14 = InitialSlope.average_fittedRate_r1(:,NC);
InitialRate_r2_NC14 = InitialSlope.average_fittedRate_r2(:,NC);
InitialRate_r3_NC14 = InitialSlope.average_fittedRate_r3(:,NC);

InitialRate_SEM_r0_NC14 = InitialSlope.SEM_fittedRate_r0(:,NC);
InitialRate_SEM_r1_NC14 = InitialSlope.SEM_fittedRate_r1(:,NC);
InitialRate_SEM_r2_NC14 = InitialSlope.SEM_fittedRate_r2(:,NC);
InitialRate_SEM_r3_NC14 = InitialSlope.SEM_fittedRate_r3(:,NC);

%% plot
% NC14
InitialRate_NC14_figure = figure;
nc = 3; % NC13
hold on
errorbar(0:0.025:1,InitialRate_r0_NC14,InitialRate_SEM_r0_NC14,'Color',ColorChoice(1,:))
errorbar(0:0.025:1,InitialRate_r1_NC14,InitialRate_SEM_r1_NC14,'Color',ColorChoice(2,:))
errorbar(0:0.025:1,InitialRate_r2_NC14,InitialRate_SEM_r2_NC14,'Color',ColorChoice(3,:))
errorbar(0:0.025:1,InitialRate_r3_NC14,InitialRate_SEM_r3_NC14,'Color',ColorChoice(4,:))


end