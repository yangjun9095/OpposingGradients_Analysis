%% generate plots of PATSER score results for a given enhancer for each individual TF
function PATSER_01_generate_score_plots(enhancer, TF)
%% Description
% generate plots of PATSER scores for a given enhancer for given sets of
% TFs. We will utilize the mapPATSERResults.m script for this.

%% Directories
PWMpath = 'S:\YangJoon\Dropbox\OpposingGradientsFigures\PATSER\pwm_Park&DePace_eLife_2020';
DataPath = 'S:\YangJoon\Dropbox\OpposingGradientsFigures\PATSER';
FigPath = 'S:\YangJoon\Dropbox\OpposingGradientsFigures\PATSER\PATSER_figures';

%% Temporary description
% For now, we will hard-code the PATSER result into list/vector of position, width, and scores for individual TFs from individual PWMs.
ID_var = '';
TF_pos = [];
TF_width = [];
TF_PATSER_score = [];

%% 1) FlyReg
ID_var = 'hbP2_Tao';
PWM_code = 'FlyReg';
Bcd_pos = [41 83 99 152 182 257];
Bcd_width = 8;
Bcd_PATSER_score = [3.65 3.94 3.71 3.88 3.46 4.37];

%% 2) Cell,2008
ID_var = 'hbP2_Tao';
PWM_code = 'Cell_2008';
Bcd_pos = [12 40 109 110 117 151 164 174 181 195 256];
complementary = [0 0 1 0 0 0 1 0 0 0 0]; % binding sites at the complementary strand
Bcd_width = 8;
Bcd_PATSER_score = [3.62 4.62 3.61 3.61 3.56 4.53 3.85 3.42 3.78 3.49 4.53];

%% 3) new5 NAR (I think, this is similar to the same Wolfe, paper which is used in Jeehae's paper)
ID_var = 'hbP2_Tao';
PWM_code = 'NAR';
Bcd_pos = [41 83 99 152 257];
Bcd_width = 7;
Bcd_PATSER_score = [3.24 3.67 3.67 3.85 3.85];

%% 4) SOLEXA
ID_var = 'hbP2_Tao';
PWM_code = 'SOLEXA';
Bcd_pos = [13 41 118 152 164 182 257];
complementary = [0 0 0 0 1 0 0];
Bcd_width = 7;
Bcd_PATSER_score = [3.38 4.35 3.68 4.74 3.35 3.52 4.74];
%% 5) Jeehae Park, et al., eLife, 2020
% They have used PWMs that they have uploaded in the link in their paper.
% First, process the PWM so that we can plug into the PATSER
% PWMpath = 'S:\YangJoon\Dropbox\OpposingGradientsFigures\PATSER\pwm_Park&DePace_eLife_2020';
% Bcd_PWM = load([PWMpath, filesep, 'bcd_wolfe.fm']);
% 
% Bcd_PWM = Bcd_PWM'; % transpose for saving
% 
% % save the transposed matrix as txt file
% save ([PWMpath, filesep, 'Bcd_wolfe_transposed.txt'], 'Bcd_PWM', '-ascii')

ID_var = 'hbP2_Tao';
PWM_code = 'Wolfe';
Bcd_pos = [41 83 99 118 152 257];
Bcd_width = 7;
Bcd_PATSER_score = [3.16 3.71 3.71 3.23 3.89 3.89];

%% hbP2_3Run_Tao
ID_var = 'hbP2_3Run_Tao';
PWM_code = 'Wolfe';
Bcd_pos = [41 83 99 118 152 257];
Bcd_width = 7;
Bcd_PATSER_score = [3.16 3.71 3.71 3.23 3.89 3.89];
        
%% generate plots
enhancer_length = 294;
% Bcd_width_perc = Bcd_width/enhancer_length;

bar(Bcd_pos, Bcd_PATSER_score, 0.5)

xlabel('position (bp)')
ylabel('PATSER score')

xlim([0 294])
xticks([0 50 100 150 200 250 294])
ylim([3 5])
yticks([3 3.5 4 4.5 5])
% ylim([3 4])
% yticks([3 3.5 4])

box on
StandardFigure(gcf,gca)

% save the plot
saveas(gcf,[FigPath, filesep, 'PATSER_',ID_var,'_Bcd_',PWM_code,'.pdf'])

%% Part2. Run sites PATSER results

%% hbP2_3Run_Tao
% cutoff threshold of the PATSER score was 3.0
% We will justify setting our own threshold using the hbP2_Tao enhancer,
% which is around 4.0

% We will use the PWM from our lab repo.
ID_var = 'hbP2_3Run_Tao';
PWM_code = 'Lab_repo';
Run_pos = [19 55 67 93 128 170 177 184 216 237];
Run_width = 9;
Run_PATSER_score = [3.20 3.38 3.27 3.58 4.62 4.54 3.78 3.93 3.22 4.62];

%% hbP2_Tao
% We will use the PWM from our lab repo.
ID_var = 'hbP2_Tao';
PWM_code = 'Lab_repo';
Run_pos = [19 55 67 93 170 177 184 216];
Run_width = 9;
Run_PATSER_score = [3.20 3.38 3.27 3.58 3.88 3.78 3.93 3.22];
%% generate plots
%% Run sites with cutoff score of 4.0
enhancer_length = 294;
% Bcd_width_perc = Bcd_width/enhancer_length;

hold on
bar(Run_pos, Run_PATSER_score, 1)
yline(4,'--')
xlabel('position (bp)')
ylabel('PATSER score')

xlim([0 294])
xticks([0 50 100 150 200 250 294])
ylim([3 5])
yticks([3 3.5 4 4.5 5])
% ylim([3 4])
% yticks([3 3.5 4])

box on
StandardFigure(gcf,gca)

% save the plot
saveas(gcf,[FigPath, filesep, 'PATSER_',ID_var,'_Run_',PWM_code,'.pdf'])

%% Part3. Zelda sites
% Goal : to show that we have not introduced the new Zelda sites by adding
% 3 Run sites.

%% 3-1-1. hbP2_3Run_Tao, with Jeehae's Zld PWM (2nd item in our lab repo)
ID_var = 'hbP2_3Run_Tao';
% We will use the PWM from our lab repo.
PWM_code = 'zelda_fm';
Zld_pos = [16 29 58 124 223 229 244 283];
Zld_width = 6;
Zld_PATSER_score = [3.68 3.68 3.64 3.30 4.37 4.33 3.53 4.33];

%% 3-1-2. hbP2_3Run_Tao, with Vfl sanger seq. PWMs
ID_var = 'hbP2_3Run_Tao';
% We will use the PWM from our lab repo.
PWM_code = 'vfl_sanger';
Zld_pos = [5 9 72 76 104 222 228 282];
Zld_width = 8;
Zld_PATSER_score = [4.93 3.71 3.78 3.78 3.28 4.13 4.47 5.58];
%% 3-2-1. hbP2_Tao
% We will use the PWM from our lab repo.
ID_var = 'hbP2_Tao';
% We will use the PWM from our lab repo.
PWM_code = 'zelda_fm';
Zld_pos = [16 29 58 124 223 229 244 283];
Zld_width = 6;
Zld_PATSER_score = [3.68 3.68 3.64 3.30 4.37 4.33 3.53 4.33];

%% 3-2-2. hbP2_3Run_Tao, with Vfl sanger seq. PWMs
ID_var = 'hbP2_Tao';
% We will use the PWM from our lab repo.
PWM_code = 'vfl_sanger';
Zld_pos = [5 9 72 76 104 222 228 282];
Zld_width = 8;
Zld_PATSER_score = [4.93 3.71 3.78 3.78 3.28 4.13 4.47 5.58];

%% generate plots
%% Zld sites with cutoff score of 3.0
enhancer_length = 294;
% Bcd_width_perc = Bcd_width/enhancer_length;

hold on
bar(Zld_pos, Zld_PATSER_score, 1)
% yline(4,'--')
xlabel('position (bp)')
ylabel('PATSER score')

xlim([0 294])
xticks([0 50 100 150 200 250 294])
ylim([3 5])
yticks([3 3.5 4 4.5 5])
% ylim([3 4])
% yticks([3 3.5 4])

box on
StandardFigure(gcf,gca)

% save the plot
saveas(gcf,[FigPath, filesep, 'PATSER_',ID_var,'Zld',PWM_code,'.pdf'])
end